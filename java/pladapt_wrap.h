/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_pladapt_WRAP_H_
#define SWIG_pladapt_WRAP_H_

class SwigDirector_Environment : public pladapt::Environment, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_Environment(JNIEnv *jenv);
    virtual unsigned int getNumberOfComponents() const;
    virtual pladapt::Environment const &getComponent(unsigned int c) const;
    virtual double asDouble() const;
    virtual pladapt::Environment::EnvironmentClass getType() const;
    virtual void printOn(std::ostream &os) const;
    virtual ~SwigDirector_Environment();
public:
    bool swig_overrides(int n) {
      return (n < 4 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<4> swig_override;
};

class SwigDirector_Configuration : public pladapt::Configuration, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_Configuration(JNIEnv *jenv);
    virtual void printOn(std::ostream &os) const;
    virtual pladapt::Configuration::ConfigurationClass getType() const;
    virtual ~SwigDirector_Configuration();
    virtual bool equals(pladapt::Configuration const &other) const;
public:
    bool swig_overrides(int n) {
      return (n < 2 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<2> swig_override;
};

class SwigDirector_GenericConfiguration : public pladapt::GenericConfiguration, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_GenericConfiguration(JNIEnv *jenv);
    virtual void printOn(std::ostream &os) const;
    virtual pladapt::Configuration::ConfigurationClass getType() const;
    virtual ~SwigDirector_GenericConfiguration();
    virtual bool equals(pladapt::Configuration const &other) const;
    virtual bool equalsSwigPublic(pladapt::Configuration const &other) const {
      return pladapt::GenericConfiguration::equals(other);
    }
public:
    bool swig_overrides(int n) {
      return (n < 2 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<2> swig_override;
};

class SwigDirector_GenericEnvironment : public pladapt::GenericEnvironment, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_GenericEnvironment(JNIEnv *jenv);
    SwigDirector_GenericEnvironment(JNIEnv *jenv, std::string const &doubleProperty);
    virtual unsigned int getNumberOfComponents() const;
    virtual pladapt::Environment const &getComponent(unsigned int c) const;
    virtual double asDouble() const;
    virtual pladapt::Environment::EnvironmentClass getType() const;
    virtual void printOn(std::ostream &os) const;
    virtual ~SwigDirector_GenericEnvironment();
    virtual bool equals(pladapt::Environment const &other) const;
    virtual bool equalsSwigPublic(pladapt::Environment const &other) const {
      return pladapt::GenericEnvironment::equals(other);
    }
public:
    bool swig_overrides(int n) {
      return (n < 5 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<5> swig_override;
};

class SwigDirector_JointEnvironment : public pladapt::JointEnvironment, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_JointEnvironment(JNIEnv *jenv, std::shared_ptr< pladapt::Environment > const &componentA, std::shared_ptr< pladapt::Environment > const &componentB);
    virtual unsigned int getNumberOfComponents() const;
    virtual pladapt::Environment const &getComponent(unsigned int c) const;
    virtual double asDouble() const;
    virtual pladapt::Environment::EnvironmentClass getType() const;
    virtual void printOn(std::ostream &os) const;
    virtual ~SwigDirector_JointEnvironment();
public:
    bool swig_overrides(int n) {
      return (n < 4 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<4> swig_override;
};

class SwigDirector_UtilityFunction : public pladapt::UtilityFunction, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_UtilityFunction(JNIEnv *jenv);
    virtual double getAdditiveUtility(pladapt::Configuration const &config, pladapt::Environment const &environment, int time) const;
    virtual double getMultiplicativeUtility(pladapt::Configuration const &config, pladapt::Environment const &environment, int time) const;
    virtual double getFinalReward(pladapt::Configuration const &config, pladapt::Environment const &environment, int time) const;
    virtual double getAdaptationReward(pladapt::Configuration const &from, pladapt::Configuration const &to, int time) const;
    virtual ~SwigDirector_UtilityFunction();
public:
    bool swig_overrides(int n) {
      return (n < 4 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<4> swig_override;
};

class SwigDirector_GenericUtilityFunction : public pladapt::GenericUtilityFunction, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_GenericUtilityFunction(JNIEnv *jenv);
    virtual ~SwigDirector_GenericUtilityFunction();
    virtual double getGenAdditiveUtility(pladapt::GenericConfiguration const &config, pladapt::GenericEnvironment const &environment, int time) const;
    virtual double getGenMultiplicativeUtility(pladapt::GenericConfiguration const &config, pladapt::GenericEnvironment const &environment, int time) const;
    virtual double getGenFinalReward(pladapt::GenericConfiguration const &config, pladapt::GenericEnvironment const &environment, int time) const;
    virtual double getGenAdaptationReward(pladapt::GenericConfiguration const &from, pladapt::GenericConfiguration const &to, int time) const;
public:
    bool swig_overrides(int n) {
      return (n < 4 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<4> swig_override;
};


#endif
